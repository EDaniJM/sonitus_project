# nginx/nginx.conf

# 1. Definir el servidor de la aplicación Django (upstream)
#    'web' es el nombre del servicio de Django en docker-compose.yml
#    '8000' es el puerto que expone el contenedor de Django.
upstream sonitus_server {
    server web:8000;
}

# 2. Configuración del servidor principal que escucha las peticiones
server {
    listen 80; # Nginx escucha en el puerto 80 (HTTP estándar)

    # Ubicación para los archivos estáticos (CSS, JS, imágenes)
    # Nginx los servirá directamente, lo cual es muy rápido.
    location /static/ {
        alias /app/staticfiles/;
    }

    # Ubicación para los archivos de medios (si subes archivos)
    location /media/ {
        alias /app/media/;
    }

    # Ubicación para las conexiones WebSocket (para Django Channels)
    # Esta configuración especial permite que la conexión en tiempo real funcione.
    location /ws/ {
        proxy_pass http://sonitus_server;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Ubicación para todo el resto del tráfico
    # Todas las demás peticiones (ej. /dashboard/, /forms/) se pasan a Django.
    location / {
        proxy_pass http://sonitus_server;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;        
    }
}